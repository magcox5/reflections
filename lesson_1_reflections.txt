January 18, 2016
Molly Cox

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By seeing only the lines that had changed, I was able to easily 
    find the line with the typo that caused the error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    By having the history, you could see which features you've implemented
    and when, plus backtrack previous versions if you encounter an error.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros of manual commit:
    > You can add a description listing the changes you've made
    > Only the changed files are saved in the commit
    > You can commit after you've implemented a feature or segment of code,
      rather than code that may not have changed materially
    cons:
    > You might get lazy and forget to do a commit
    > If your computer freezes before a commit, you may lose work
    > Your repository with all your files could get corrupted.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git thinks of the group of files you are committing as one project, 
    whereas Google Docs treats each file as a separate entity.

How can you use the commands git log and git diff to view the history of files?

    The git log will show you the files you have modified in each commit, 
    and the git diff will show you the exact differences between the code
    line by line.

How might using version control make you more confident to make changes that
could break something?

    If you are using version control, you can save a copy, then make changes
    that you're not sure will work.  If they work, you can commit them; if 
    they don't, you can just revert to the previous version.

Now that you have your workspace set up, what do you want to try using Git for?

    I'd like to try Git for my next xcode project.